{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","renderedList","props","songs","map","song","className","key","title","onClick","selectSong","this","Component","connect","state","type","payload","mySong","selectedSong","duration","singer","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"2NAIMA,E,4MAEFC,aAAc,WACV,OAAO,EAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BAAQG,QAAS,kBAAI,EAAKP,MAAMQ,WAAWL,IAAOC,UAAU,qBAA5D,WAEJ,yBAAKA,UAAU,WACVD,EAAKG,Y,uDAUtB,OACI,yBAAKF,UAAU,mBAAmBK,KAAKV,oB,GArB5BW,aA+BRC,eALS,SAACC,GAErB,MAAO,CAAEX,MAAOW,EAAMX,SAGc,CAAEO,WClChB,SAACL,GAEvB,MAAO,CACHU,KAAM,gBACNC,QAASX,KD8BFQ,CAAyCb,GEVzCa,eAJS,SAACC,GACrB,MAAO,CAAEG,OAAQH,EAAMI,gBAGZL,EAtBI,SAACX,GAEhB,OAAIA,EAAMe,OAIN,6BACI,4CACI,qCAAWf,EAAMe,OAAOT,MACxB,6BADA,aAEWN,EAAMe,OAAOE,SACxB,6BAHA,WAISjB,EAAMe,OAAOG,SATvB,6BAAK,iDCcLC,EAfH,WACR,OACI,yBAAKf,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qBACX,kBAAC,EAAD,UCOLgB,cAAgB,CAC3BnB,MAlBiB,WACjB,MAAO,CACH,CAAEK,MAAO,YAAaW,SAAU,OAAQC,OAAQ,gBAChD,CAAEZ,MAAO,uBAAwBW,SAAU,OAAQC,OAAQ,WAC3D,CAAEZ,MAAO,gBAAiBW,SAAU,OAAQC,OAAQ,eACpD,CAAEZ,MAAO,YAAaW,SAAU,OAAQC,OAAQ,gBAcpDF,aAVwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMK,EAAW,uCACzD,MAAmB,kBAAhBA,EAAOR,KACCQ,EAAOP,QAGXE,KCTXM,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEPC,SAASC,cAAc,Y","file":"static/js/main.78ecddaa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends Component {\r\n    \r\n    renderedList= () => {\r\n        return this.props.songs.map((song) => {\r\n            return(\r\n                <div className=\"item\" key={song.title} >\r\n                    <div className=\"right floated content\">\r\n                        <button onClick={()=>this.props.selectSong(song)} className=\"ui button primary\">Select</button>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        {song.title}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"ui divided list\">{this.renderedList()}</div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state.selectedSong);\r\n    return { songs: state.songs };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);","//action creators\r\nexport const selectSong = (song) => {\r\n    //action\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = (props) => {\r\n    // console.log(props.mySong);\r\n    if(!props.mySong) {\r\n        return <div><h4>Select a song</h4></div>\r\n    }\r\n    return(\r\n        <div>\r\n            <h3>Details for:</h3>\r\n                <p>Title: {props.mySong.title}\r\n                <br />\r\n                Duration: {props.mySong.duration}\r\n                <br />\r\n                Singer: {props.mySong.singer}\r\n                </p>            \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { mySong: state.selectedSong }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container grid\">\r\n            <div className=\"ui row\">\r\n                <div className=\"column eight wide\">\r\n                    <SongList />\r\n                </div>\r\n                <div className=\"column eight wide\">\r\n                    <SongDetail />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\n//reducers\r\nconst songsReducer = () => {\r\n    return [\r\n        { title: 'Attention', duration: '3:50', singer: 'Charlie Puth' },\r\n        { title: 'Love the way you lie', duration: '4:10', singer: 'Rihanna' },\r\n        { title: 'See you again', duration: '3:45', singer: 'Wiz Khalifa' },\r\n        { title: 'Despacito', duration: '5:20', singer: 'Luis Fonsi' },\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if(action.type === 'SONG_SELECTED') {\r\n        return action.payload;\r\n    }\r\n\r\n    return selectedSong;\r\n}\r\n\r\nexport default combineReducers({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)} >\r\n        <App /> \r\n    </Provider>,\r\n document.querySelector('#root'));"],"sourceRoot":""}